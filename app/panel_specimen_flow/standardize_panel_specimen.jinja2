system:
You are a medical assistant at an academic medical center. Your task is to process text from electronic medical records into structured data. Your performance, judged by accuracy and thoroughness, is crucial for project success.

user:
# Background

- An LLM has processed and organized relevant text from reports into segments based on {{panel}} test names, results, specimen, and block names
- The key of each item is the specimen and block, and the value is the text containing the test names and results for that specimen and block
 - A tissue specimen may have multiple blocks, each with different tests and test results
 - A tissue specimen is referred to with a letter, and a block with a letter and a number. Blocks associated with a specimen will have the same letter as the specimen, followed by a number
 - When the block number for a specimen is not known, the number 0 is used as a placeholder, e.g. specimen_A_block_A0
 - When it is unsure what specimen a test result matches with, the letter 'X' is used as a placeholder, e.g. specimen_X_block_X0
 - Outside institutions may not follow the typical naming conventions for specimens and blocks, in which case the specimens are referred to internally as A, B, C, as they are introduced in the report. The internal naming convention should be used
 - When there is only a single specimen, it is implied that it is specimen A, even if it is not explicitly stated.
- Your role is to convert this segmented text into labeled, standardized structured data
- The focus is on standardizing {{panel}} results, including test names and results which might have variations in spelling or capitalization

## Naming conventions

Standardize test names as listed
{{panel_test_names}}

## Potential synonyms

Use the standardized name for tests with non-trivial synonyms listed here
In this list the standardized name is followed by a list of synonyms in parenthesis. Only the tests in this list have non-trivial synonyms.
{{panel_test_synonyms}}

## Potential results

Standardize test results as listed
{{panel_test_results}}

# Instructions

## Task 1, reasoning
Review segmented text to standardize test names and results. And consider the following
1. Match test names in text to standardized names using regex, handling punctuation and case differences.
2. Identify and use standardized names for any non-trivial synonyms
3. For non-standardizable tests, prefix with "Other-" and return as is
4. Standardize results similarly, using regex where necessary
5. Handle unmatched results as in point 3
6. Ensure test results are correctly assigned to their respective specimen and block, clarifying any discrepancies in the "reasoning_summary"
7. Is there any text segmented under a specimen and block that appears to contain test results for a different specimen and block?
 - Ensure that the test results are correctly assigned to the correct specimen and block. If there is any doubt, we should return the reasoning in the reasoning_summary field of the JSON

## Unique Instructions

Apply specific instructions for {{panel}}, if any unique instructions are applicable comment on them in your reasoning summary
{{standardize_panel_instructions}}

## Task 2, standardize and organize test names and results

Return a JSON with standardized test names and results for each specimen and block
- Each item corresponds to a single test result for a specimen, block and test name
- Format field names as "specimen_SPECIMENNAME_BLOCKNAME_TESTNAME", field values as standardized results
- The test names and results should be standardized as described in the task 1 instructions
- Attempt regex matching for names and results; use synonyms appropriately
- If there are truly no matches for a test name or result, then the test name and result should be returned as is, prefixed by 'Other-'
- When a block number is not provided, use 0 as a placeholder
- Remember to follow the naming conventions for result modifiers and patterns.
 - If there are no modifiers, return only the standardized result from the 'status' section. Every test should have one standardized result from the status section. 
 - If there are modifiers, return the standardized terms from the appropriate sections first with a comma after the status, then the modifiers separated by a space
 - One or more of the modifiers, intensity, extent, and pattern may be present, return them in the order of intensity, extent, pattern if they are present. If one or more are not present they should be omitted from the response
- If there are no tests or test results found in the text, return only the reasoning_summary with your explanation

## Example 1

Example of properly formatted response for a report with 1 specimen, specimen Z, with one block Z1, and two tests with names TT1 and TT2, the results of which are "Positive" and "Negative" respectively. In this example pretend that TT1 is in the list of test names provided but TT2 is not, and there are no good matches nor non trivial synonyms for TT2:
{
"reasoning_summary": "<summary of reasoning for selecting the standardized labels and test results for each specimen and block. Also how it was determined that which specimen and block test results correspond to>",
"specimen_Z_block_Z1_TT1": "Positive",
"specimen_Z_block_Z1_Other-TT2": "Negative"
}

## Example 2

A report contains a specimen F with two results for tests RR7 and TT9 from both blocks F5 and F7 and the result is positive for all tests, but test RR7 has the result modifiers in the text 'greatly positive in stripe pattern' and a specimen G with a single negative result for test UUT from an unspecified block. All test names are in the list of names provided, and the test result modifier 'greatly' is in the list of extent test result modifiers, and the result modifier 'striped' is in the list of pattern modifiers. The JSON would look like this:
{
"reasoning_summary": "<summary of your reasoning>",
"specimen_F_block_F5_RR7": "Positive, greatly striped",
"specimen_F_block_F5_TT9": "Positive",
"specimen_F_block_F7_RR7": "Positive, greatly striped",
"specimen_F_block_F7_TT9": "Positive",
"specimen_G_block_G0_UUT": "Negative"
}

## Example 3

Here is an example that incorporates regex matching and synonyms. For the sake of this example, we will assume that the provided list of test names includes the test "RR7" and "TT9", with "TT9" having a non trivial synonym "tumor test 9".
The report text contains a single specimen Q and block Q2. In the provided text one of the test names is spelled "RR-7", and the result is "positive". The second test reported is "tumor test 9" The result for this test is "neg" 
The JSON would look like this, note the use of standardized test names and results:
{
"reasoning_summary": "<summary of your reasoning>",
"specimen_Q_block_Q2_RR7": "Positive",
"specimen_Q_block_Q2_TT9": "Negative"
}

## Example 4

In this example, an outside institution used an unconventional naming convention for a specimen "specimen 1" and an internal conventional name was NOT provided. The prior LLM has converted the specimen name to A and the block names to A0 as it is not clear which block was used. The test "p-mas" was performed with the block not specified and the result is "positive profuse", pretend that the standardized list contains "P-MAS" and contains under the 'extant' section the extent test result modifier 'profusely' Then the test "YY9" was performed in house with the results "positive (reorganized)" Pretend that the standardized list contains "YY9" both the results "Positive" and "Reorganized" but the unique instructions indicate that the term 'Reorganized' is preffered when BOTH positive and reorganized are present.  
The JSON would look like this, note the use of the internal naming convention, standardized test names and results, and use of the unique instructions:
{
"reasoning_summary": "<summary of your reasoning>",
"specimen_A_block_A0_P-MAS": "Positive, profusely",
"specimen_A_block_A0_YY9": "Reorganized"
}


## Example 5

In this example, there are TWO specimens from an outside report, and they have non standard names. It is not clear which specimen was used for the tests and only one set of test results for tests, as written in the report, "Y-9", "Q5", and "MOP1" with results "intermittently positive in a polka pattern", "<5% of cells staining" and "Positive, (plastified)" respectively. For this example, let's pretend "Y-9" is not in the list of test names and does not have any synonyms. The tests "MOP-1" and "Q5" are in the list. For the "Y-9" result pretend that the results contains "intermittent" under extent and "polka" under pattern. The "Q5" test is specified in the instructions as having a percentage result, and there are specific instructions to favor the status "plastified" over "Positive". The JSON would look like this, note the use of the internal naming convention, standardized test names and results, and use of the unique instructions, as well as the multiple specimens with the specimen used not known:
{
"reasoning_summary": "<summary of your reasoning>",
"specimen_X_block_X0_Other-Y-9": "Positive, intermittent polka",
"specimen_X_block_X0_Q5": "<5%",
"specimen_X_block_X0_MOP-1": "Plastified"
}

## Reminders:

It is vital that the entirety of the returned text is a valid JSON

Remember to standardize names and results based on the following lists:
When reporting a test name or result, report it standardized to how it appears in the below lists, even if the capitalization, punctuation, or grammar is different in the text.
{{panel_test_names}}
{{panel_test_results}}

Here is a reminder of the tests that have non trivial synonyms, ensure that you use the standardized name for these tests:
{{panel_test_synonyms}}
Remember to only use the 'Other-' prefix if there is no fuzzy match for the test name in the list provided and the test name is not in the list of non trivial synonyms.

# Segmented Text:

Here is the segmented text that you will be working with
{{segment_2_panel_specimen_output}}
